import { drizzle, BetterSQLite3Database } from "drizzle-orm/better-sqlite3";
import { sqliteTable, text, numeric, integer } from "drizzle-orm/sqlite-core";
import Database from "better-sqlite3";

const sqlite = new Database("sqlite.db");
export const db: BetterSQLite3Database = drizzle(sqlite);

export const playersTable = sqliteTable("players", { 
  team_name: text("team_name"),
  last_name: text("last_name"),
  first_name: text("first_name"),
  position: numeric("position" as string),
  id: numeric("id" as string).primaryKey(), //if "as string" isn't here then the typescript language server grinds to a halt
})

export const playersBasicStatsTable = sqliteTable("players", {
  team_name: text("team_name"),
  last_name: text("last_name"),
  first_name: text("first_name"),
  id: numeric("id" as string).primaryKey(), //if "as string" isn't here then the typescript language server grinds to a halt
  bats: numeric("bats" as string),
  throws: numeric("throws" as string),
  position: numeric("position" as string),
  gb_batter_type: numeric("gb_batter_type" as string),
  fb_batter_type: numeric("fb_batter_type" as string),
  speed: numeric("speed" as string),
  steal: numeric("steal" as string),
  running: numeric("running" as string),
  contact_pot: numeric("contact_pot" as string),
  gap_pot: numeric("gap_pot" as string),
  power_pot: numeric("power_pot" as string),
  eye_pot: numeric("eye_pot" as string),
  ks_pot: numeric("ks_pot" as string),
  infield_range: numeric("infield_range" as string),
  infield_error: numeric("infield_error" as string),
  infield_arm: numeric("infield_arm" as string),
  dp: numeric("dp" as string),
  catcher_abil: numeric("catcher_abil" as string),
  catcher_arm: numeric("catcher_arm" as string),
  of_range: numeric("of_range" as string),
  of_error: numeric("of_error" as string),
  of_arm: numeric("of_arm" as string),
  p_exp: numeric("p_exp" as string),
  move_pot: numeric("move_pot" as string),
  control_pot: numeric("control_pot" as string),
  wp: numeric("wp" as string),
  balk: numeric("balk" as string),
  stamina: numeric("stamina" as string),
  hold: numeric("hold" as string),
});

export const playersFullTable = sqliteTable("players", {
  team_name: text("team_name"),
  last_name: text("last_name"),
  first_name: text("first_name"),
  nation: text("nation"),
  city: text("city"),
  eol: text("eol"),
  id: numeric("id" as string).primaryKey(), //if "as string" isn't here then the typescript language server grinds to a halt
  del: numeric("del" as string),
  team_id: numeric("team_id" as string),
  nick_name: numeric("nick_name" as string),
  uniform_number: numeric("uniform_number" as string),
  day_ob: numeric("day_ob" as string),
  month_ob: numeric("month_ob" as string),
  year_ob: numeric("year_ob" as string),
  nationality_id: numeric("nationality_id" as string),
  city_id: numeric("city_id" as string),
  facial_type: numeric("facial_type" as string),
  height: numeric("height" as string),
  weight: numeric("weight" as string),
  bats: numeric("bats" as string),
  throws: numeric("throws" as string),
  position: numeric("position" as string),
  ml_service: numeric("ml_service" as string),
  "40_man_roster_service": numeric("40_man_roster_service" as string),
  pro_years: numeric("pro_years" as string),
  options_used: numeric("options_used" as string),
  contact_vl: numeric("contact_vl" as string),
  gap_vl: numeric("gap_vl" as string),
  power_vl: numeric("power_vl" as string),
  eye_vl: numeric("eye_vl" as string),
  avoid_kvl: numeric("avoid_kvl" as string),
  babipvl: numeric("babipvl" as string),
  contract_vr: numeric("contract_vr" as string),
  gap_vr: numeric("gap_vr" as string),
  power_vr: numeric("power_vr" as string),
  eye_vr: numeric("eye_vr" as string),
  ks_vr: numeric("ks_vr" as string),
  babipvr: numeric("babipvr" as string),
  contact_pot: numeric("contact_pot" as string),
  gap_pot: numeric("gap_pot" as string),
  power_pot: numeric("power_pot" as string),
  eye_pot: numeric("eye_pot" as string),
  ks_pot: numeric("ks_pot" as string),
  babip_pot: numeric("babip_pot" as string),
  hbp: numeric("hbp" as string),
  gb_batter_type: numeric("gb_batter_type" as string),
  fb_batter_type: numeric("fb_batter_type" as string),
  speed: numeric("speed" as string),
  steal: numeric("steal" as string),
  running: numeric("running" as string),
  sac_bunt: numeric("sac_bunt" as string),
  bunt_hit: numeric("bunt_hit" as string),
  ove_vl: numeric("ove_vl" as string),
  control_vl: numeric("control_vl" as string),
  movement_vr: numeric("movement_vr" as string),
  control_vr: numeric("control_vr" as string),
  move_pot: numeric("move_pot" as string),
  control_pot: numeric("control_pot" as string),
  wp: numeric("wp" as string),
  balk: numeric("balk" as string),
  stamina: numeric("stamina" as string),
  hold: numeric("hold" as string),
  "gb%": numeric("gb" as string),
  velocity: numeric("velocity" as string),
  arm_slot: numeric("arm_slot" as string),
  infield_range: numeric("infield_range" as string),
  infield_error: numeric("infield_error" as string),
  infield_arm: numeric("infield_arm" as string),
  dp: numeric("dp" as string),
  catcher_abil: numeric("catcher_abil" as string),
  catcher_arm: numeric("catcher_arm" as string),
  of_range: numeric("of_range" as string),
  of_error: numeric("of_error" as string),
  of_arm: numeric("of_arm" as string),
  p_exp: numeric("p_exp" as string),
  c_exp: numeric("c_exp" as string),
  "1b_exp": numeric("1b_exp" as string),
  "2b_exp": numeric("2b_exp" as string),
  "3b_exp": numeric("3b_exp" as string),
  ss_exp: numeric("ss_exp" as string),
  lf_exp: numeric("lf_exp" as string),
  cf_exp: numeric("cf_exp" as string),
  rf_exp: numeric("rf_exp" as string),
  use_expected: numeric("use_expected" as string),
  expected_level: numeric("expected_level" as string),
  expected_ab: numeric("expected_ab" as string),
  expected_avg: numeric("expected_avg" as string),
  expected2b: numeric("expected2b" as string),
  expected3b: numeric("expected3b" as string),
  expected_hr: numeric("expected_hr" as string),
  expected_bb: numeric("expected_bb" as string),
  expected_k: numeric("expected_k" as string),
  expected_hbp: numeric("expected_hbp" as string),
  contract_y1: numeric("contract_y1" as string),
  contract_y2: numeric("contract_y2" as string),
  contract_y3: numeric("contract_y3" as string),
  contract_y4: numeric("contract_y4" as string),
  contract_y5: numeric("contract_y5" as string),
  contract_y6: numeric("contract_y6" as string),
  contract_y7: numeric("contract_y7" as string),
  contract_y8: numeric("contract_y8" as string),
  contract_y9: numeric("contract_y9" as string),
  contract_y10: numeric("contract_y10" as string),
  contract_current_year: numeric("contract_current_year" as string),
  extension_y1: numeric("extension_y1" as string),
  extension_y2: numeric("extension_y2" as string),
  extension_y3: numeric("extension_y3" as string),
  extension_y4: numeric("extension_y4" as string),
  extension_y5: numeric("extension_y5" as string),
  extension_y6: numeric("extension_y6" as string),
  extension_y7: numeric("extension_y7" as string),
  extension_y8: numeric("extension_y8" as string),
  extension_y9: numeric("extension_y9" as string),
  extension_y10: numeric("extension_y10" as string),
  greed: numeric("greed" as string),
  loyalty: numeric("loyalty" as string),
  play_for_winner: numeric("play_for_winner" as string),
  work_ethic: numeric("work_ethic" as string),
  intelligence: numeric("intelligence" as string),
  leader_ability: numeric("leader_ability" as string),
  stuff_overall: numeric("stuff_overall" as string),
  "stuff_r/l_split": numeric("stuff_r" as string),
  stuff_pot: numeric("stuff_pot" as string),
  fastball: numeric("fastball" as string),
  slider: numeric("slider" as string),
  curveball: numeric("curveball" as string),
  changeup: numeric("changeup" as string),
  cutter: numeric("cutter" as string),
  sinker: numeric("sinker" as string),
  splitter: numeric("splitter" as string),
  forkball: numeric("forkball" as string),
  screwball: numeric("screwball" as string),
  circlechange: numeric("circlechange" as string),
  knucklecurve: numeric("knucklecurve" as string),
  knuckleball: numeric("knuckleball" as string),
  fastball_pot: numeric("fastball_pot" as string),
  slider_pot: numeric("slider_pot" as string),
  curveball_pot: numeric("curveball_pot" as string),
  changeup_pot: numeric("changeup_pot" as string),
  cutter_pot: numeric("cutter_pot" as string),
  sinker_pot: numeric("sinker_pot" as string),
  splitter_pot: numeric("splitter_pot" as string),
  forkball_pot: numeric("forkball_pot" as string),
  screwball_pot: numeric("screwball_pot" as string),
  circlechange_pot: numeric("circlechange_pot" as string),
  knucklecurve_pot: numeric("knucklecurve_pot" as string),
  knuckleball_pot: numeric("knuckleball_pot" as string),
  "hitter3b/2b_ratio": numeric("hitter3b" as string),
  lahman_id: numeric("lahman_id" as string),
  bbref_id: numeric("bbref_id" as string),
  bbrefminors_id: numeric("bbrefminors_id" as string),
  twitter_handle: numeric("twitter_handle" as string),
});
